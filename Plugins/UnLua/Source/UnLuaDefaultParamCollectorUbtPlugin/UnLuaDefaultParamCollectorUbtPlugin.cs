using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using EpicGames.Core;
using EpicGames.UHT.Tables;
using EpicGames.UHT.Types;
using EpicGames.UHT.Utils;

namespace UnLuaDefaultParamCollectorUbtPlugin
{
    [UnrealHeaderTool]
    public class UnLuaDefaultParamCollectorUbtPlugin
    {
        [UhtExporter(
            Name = "UnLua",
            Description = "UnLua Default Param Collector",
            Options = UhtExporterOptions.Default,
            ModuleName = "UnLua")]
        private static void Export(IUhtExportFactory factory)
        {
            var output = new StringBuilder();
            output.AppendLine("// Generated By C# UbtPlugin");

            foreach (var module in factory.Session.Modules)
            {
                foreach (var package in module.Packages)
                {
                    foreach (var obj in package.Children)
                    {
                        if (obj is not UhtClass uhtClass)
                            continue;

                        output.AppendLine($"// Class: {uhtClass.SourceName}");

                        foreach (var function in uhtClass.Functions)
                        {
                            output.AppendLine($"// Function: {function.SourceName}");

                            foreach (var param in function.Children.OfType<UhtProperty>())
                            {
                                if (!param.PropertyFlags.HasAnyFlags(EPropertyFlags.Parm) || param.PropertyFlags.HasAnyFlags(EPropertyFlags.ReturnParm))
                                    continue;

                                output.AppendLine($"// Param: {param.SourceName} ({param.GetType().Name})");
                            }
                        }
                    }
                }
            }

            var filePath = factory.MakePath("DefaultParamCollection", ".inl");
            factory.CommitOutput(filePath, output);
        }
    }
}